#!/bin/bash

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

DIR="$SNAP/var/www/onlyoffice/documentserver"
LOG_DIR="$SNAP_DATA/var/log/onlyoffice/documentserver"
APP_DIR="$SNAP/var/lib/onlyoffice/documentserver"
CONF_DIR="$SNAP_DATA/etc/onlyoffice/documentserver"
#LOCAL_CONFIG=${CONF_DIR}/local.json
#EXAMPLE_CONFIG=${CONF_DIR}-example/local.json
#JSON_BIN="$DIR/npm/node_modules/.bin/json"
#JSON="$JSON_BIN -I -q -f $LOCAL_CONFIG"
#JSON_EXAMPLE="$JSON_BIN -I -q -f ${EXAMPLE_CONFIG}"

DB_HOST="localhost"
DB_USER="onlyoffice"
DB_PWD="onlyoffice"
DB_NAME="onlyoffice"

install_db(){
        CONNECTION_PARAMS="-h$DB_HOST -U$DB_USER -w"
        if [ -n "$DB_PWD" ]; then
                export PGPASSWORD=$DB_PWD
        fi

        PSQL="$SNAP/usr/bin/wrapper-psql -h 127.0.0.1 -d postgres -q $CONNECTION_PARAMS"
        CREATEDB="$SNAP/usr/bin/createdb $CONNECTION_PARAMS"

	# test postgresql connection
	set +e
        $PSQL -c ";" &>/dev/null
        ERRCODE=$?
        if [ $ERRCODE -ne 0 ]; then
                service postgresql start &>/dev/null
                $PSQL -c ";" &>/dev/null || { echo "ERROR: can't connect to postgressql database"; exit 1; }
        fi
	set -e

        if ! $PSQL -lt | cut -d\| -f 1 | grep -qw $DB_NAME; then
                $CREATEDB $DB_NAME >/dev/null 2>&1
        fi

        if [ ! "$CLUSTER_MODE" = true ]; then
                $PSQL -d "$DB_NAME" -f "$DIR/server/schema/postgresql/removetbl.sql" >/dev/null 2>&1
        fi
        $PSQL -d "$DB_NAME" -f "$DIR/server/schema/postgresql/createdb.sql" >/dev/null 2>&1
}

install_db

